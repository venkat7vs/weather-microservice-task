apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: weatherapp
    release: 1.0.0
  name: weatherapp
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: weatherapp
      release: 1.0.0
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: weatherapp
        release: 1.0.0
    spec:
      containers:
      - image: 519604319646.dkr.ecr.us-east-2.amazonaws.com/weatherapp:v1
        imagePullPolicy: Always
        name: weatherapp
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: sdx-doc-service
        ports:
        - containerPort: 3000
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 120
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 200m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 50Mi
        terminationMessagePath: /demo/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      #nodeSelector:
      #  env: 
      # platform: apps
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - key: "node.kubernetes.io/memory-pressure"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 6000
status:
  availableReplicas: 2
  conditions:
  observedGeneration: 10
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
  
  
